const express = require('express');
const multer = require('multer');
const path = require('path');
const mongoose = require('mongoose'); // Assuming you're using Mongoose

const connectDB = async () => {
  try {
    // Replace with your MongoDB connection string
    await mongoose.connect('mongodb://localhost:27017/nextjs_apps');
    console.log('MongoDB connected successfully');
  } catch (error) {
    console.error('Error connecting to MongoDB:', error);
    process.exit(1); // Exit the process on failure
  }
};

connectDB();

const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    const finalPath = path.join(__dirname, 'uploads');
    console.log('Final Upload Path:', finalPath);
    cb(null, finalPath);
  },
});

const upload = multer({ storage }).array('images', 4); // Array with limit of 4

const app = express();

// ... other routes and middleware

app.post('/products', upload.array('images', 4), async (req, res) => {
  try {
    // Handle product creation logic here
    // Access uploaded files details from req.files
    const { name, description, price } = req.body;

    if (!req.files) {
      return res.status(400).json({ message: 'No images uploaded' });
    }

    const images = req.files.map((file) => file.path);

    if (!name || !price) {
      return res.status(400).json({ message: 'Missing required fields' });
    }

    const newProduct = new Product({ name, description, price, images });
    await newProduct.save();

    return res.status(201).json({ message: 'Product created successfully!' });
  } catch (err) {
    console.error(err);
    return res.status(500).json({ message: 'Error creating product' });
  }
});

app.listen(3000, () => console.log('Server listening on port 3000'));
